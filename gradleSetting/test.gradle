test {
    testLogging {
        // set options for log level LIFECYCLE
        events "passed", "skipped", "failed", "standardOut"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "RESULT: ${result.resultType} (${result.testCount} tests in total, ${result.successfulTestCount} tests are successed, ${result.failedTestCount} tests are failed, ${result.skippedTestCount} tests are skipped)"
                def repeatLength = output.length()
                println("\n" + ("--" * repeatLength) + "\n" + output + "\n" + ("--" * repeatLength))
            }
        }
    }
}
